import streamlit as st
import pickle
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfVectorizer
import numpy as np
from win32com.client import Dispatch
import re

def speak(text):
	speak=Dispatch(("SAPI.SpVoice"))
	speak.Speak(text)


model = pickle.load(open('spam.pkl','rb'))
cv=pickle.load(open('vectorizer.pkl','rb'))
model_url = pickle.load(open('link.pkl','rb'))
cv_url=pickle.load(open('vectorizer_url.pkl','rb'))

def Find(string): 
    regex = r"(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\".,<>?«»“”‘’]))"
    url = re.findall(regex,string)       
    return [x[0] for x in url] 

def main():
	st.title("Email Spam Classification and link detection Application")
	st.write("Build with Streamlit & Python")
	activites=["Spam Classification","Link Detection"]
	choices=st.sidebar.selectbox("Select Activities",activites)
	if choices=="Spam Classification":
		st.subheader("Spam Classification")
		msg=st.text_input("Enter a text")
		#link=Find(msg)
		if st.button("Process"):
			print(msg)
			print(type(msg))
			data=[msg]
			print(data)
			vec=cv.transform(data).toarray()
			result=model.predict(vec)
			if result[0]==0:
				st.success("This is Not A Spam Email")
				speak("This is Not A Spam Email")
			else:
				st.error("This is A Spam Email")
				speak("This is A Spam Email")
	elif choices=="Link Detection":
		st.subheader("link Detection")
		msg=st.text_input("Enter a link")
		#link=Find(msg)
		if st.button("Process"):
			print(msg)
			print(type(msg))
			data=[msg]
			print(data)
			X_predict1=data
			X_predict1 = cv_url.transform(X_predict1)
			New_predict1 = model_url.predict(X_predict1)
			if New_predict1[0]=="good":
				st.success("This is  NOT a Malicious URL" )
				speak("This is NOT a Malicious URL")
			else:
				st.error("This is a Malicious URL  ")
				speak("This is a  Malicious URL  ")


main()
